services:
  sonarr:
    container_name: {{ sonarr_container_name }}
    image: "{{ sonarr_image_name }}:{{ sonarr_image_version }}"
    volumes:
        - "{{ sonarr_series_directory }}:/series:rw"
        - "{{ sonarr_download_directory }}:/downloads:rw"
        - "{{ sonarr_data_directory }}:/config:rw"
{% if sonarr_extra_volumes is defined %}
{% for volume in sonarr_extra_volumes %}
        - "{{ volume }}"
{% endfor %}
{% endif %}
    ports:
        - "{{ sonarr_port }}:8989"
    environment:
        TZ: "{{ timezone }}"
        PUID: "{{ sonarr_user_id }}"
        PGID: "{{ sonarr_group_id }}"
    labels:
      traefik.enable: "{{ sonarr_available_externally | string }}"
      traefik.http.routers.sonarr.rule: "Host(`{{ sonarr_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.sonarr.tls: true
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '{{ sonarr_cpu }}'
          memory: {{ sonarr_memory }}  
    networks:
      - {{ sonarr_network_name }} 

networks:
  {{ sonarr_network_name }}:
    external: true